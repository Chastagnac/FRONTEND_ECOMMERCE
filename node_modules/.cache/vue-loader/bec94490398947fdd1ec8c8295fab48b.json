{"remainingRequest":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\src\\views\\BoxCountry.vue?vue&type=style&index=0&id=6a4608f6&lang=css","dependencies":[{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\src\\views\\BoxCountry.vue","mtime":1635326405750},{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1639407450307},{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1639407453557},{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1639407451807},{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639407449155},{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639407452380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgIC5jYXJkLWltYWdlIHsNCiAgICAgICAgZGlzcGxheTogY29udGVudHM7DQogICAgfQ0K"},{"version":3,"sources":["C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\src\\views\\BoxCountry.vue"],"names":[],"mappings":";KAkOK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB","file":"C:/Users/leoch/Desktop/Cours/G4/projets/ecommerce_g4/ecommerce/ecommerce_front/src/views/BoxCountry.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"page-box-country\">\r\n        <div class=\"select\">\r\n            <select class=\"select is-multiple\" v-model=\"selected\" @change=\"getcodePays(selected)\">\r\n                <option disabled value=\"\">Choisissez le pays</option>\r\n                <option :value=\"country.alpha2\" v-for=\"country in countries\" v-bind:key=\"country.code\">\r\n                {{ country.nom }}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        <br>\r\n        <ListCountries \r\n            v-bind:countries=\"countries\"\r\n            v-on:getcodePays=\"getcodePays\"\r\n            />\r\n        <br>\r\n        <div class=\"columns\" v-if=\"selected !== ''\">\r\n            <div class=\"column\">\r\n                <div class=\"card mt-4\">\r\n                    <div class=\"card-content\">\r\n                        <div class=\"media\">\r\n                            <div class=\"card-image has-text-centered\">\r\n                                <figure class=\"image is-128x128\">\r\n                                <img :src=\"require(`../assets/flags/4x3/${codePays}.svg`)\" />\r\n                                </figure>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"content\">\r\n                            <table class=\"table is-fullwidth\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Nom</th>\r\n                                    <th>Code Alpha2</th>\r\n                                    <th>Code</th>\r\n                                    <th>Risque Global</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tr>\r\n                                <td>{{ pays.nom }}/{{ pays.nom_en_gb }}</td>\r\n                                <td>{{ pays.alpha2 }}</td>\r\n                                <td>{{ pays.code }}</td>\r\n                                <td>{{ pays.risque }}</td>\r\n                                </tr>\r\n                            </table>\r\n                            <br />\r\n                            <hr />\r\n                            <p>{{ currentDateTime() }}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div v-if=\"neededProducts.length >= 1\" class=\"title has-text-centered\">Notre sélection pour votre voyage</div>\r\n            <div class=\"columns is-multiline\">\r\n                <div class=\"card-image\">\r\n                    <ProductsCountry\r\n                        v-for=\"product in neededProducts\"\r\n                        v-bind:key=\"product.id\"\r\n                        v-bind:product=\"product\"\r\n                        v-on:removeProduct=\"removeProduct\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        <div class=\"columnn\" v-if=\"selected !== ''\">\r\n            <div class=\"card\">\r\n                <div class=\"card-content has-text-centered\">\r\n                    <div class=\"title has-text-centered\">\r\n                        Panier total :\r\n                    </div>\r\n                    <div class=\"title has-text-centered\" v-if=\"neededProducts.length > 2\">\r\n                        <h3> <i>{{ totalPrice(0)}}</i><i>€</i></h3><br>\r\n                        <p>Vous obtenez {{ reduc }} % de réduction !</p><br>\r\n                        soit {{ totalPrice(1)}}€\r\n                    </div>\r\n                    <div class=\"title has-text-centered\" v-else>\r\n                        <p>{{ totalPrice(0)}} €</p>\r\n                        <hr>\r\n                    </div>\r\n                    <a v-if=\"neededProducts.length >= 1\" class=\"button is-dark\" @click=\"addToCart\">Ajouter au panier</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { toast } from \"bulma-toast\";\r\nimport ProductsCountry from \"@/components/ProductsCountry\";\r\nimport ListCountries from \"@/components/ListCountries\";\r\n\r\nexport default {\r\n  name: \"BoxCountry\",\r\n\r\n  data() {\r\n    return {\r\n        neededProducts: [],\r\n        countries: {},\r\n        pays: {},\r\n        selected: \"\",\r\n        codePays: \"\",\r\n        quantity: 1,\r\n        reduc: 0\r\n        };\r\n    },\r\n    components: {\r\n        ProductsCountry,\r\n        ListCountries\r\n    },\r\n    mounted() {\r\n        this.getCountries();\r\n    },\r\n    methods: {\r\n\r\n        getImgUrl(codePays) {\r\n            return ('../assets/flags/4x3/' + codePays + '.svg')\r\n        },\r\n        addToCart() {\r\n            if (isNaN(this.quantity) || this.quantity < 1) {\r\n                this.quantity = 1;\r\n            }\r\n            this.neededProducts.forEach(element => {\r\n                const item = {\r\n                    product : element,\r\n                    quantity : this.quantity\r\n                }\r\n                // Commut == Mutation dans le store (afin d'actualiser le state)\r\n                 this.$store.commit(\"addToCart\", item);\r\n            });\r\n       \r\n            toast({\r\n                message: \"Le produit à bien été ajouté au panier\",\r\n                type: \"is-success\",\r\n                dismissible: true,\r\n                pauseOnHover: true,\r\n                duration: 2000,\r\n                position: \"bottom-right\",\r\n            });\r\n        },\r\n        removeProduct(product) {\r\n            this.neededProducts = this.neededProducts.filter(i => i.id !== product.id)\r\n        },\r\n        totalPrice(reduction) {\r\n            let total = 0\r\n            let i = 0\r\n            this.neededProducts.forEach(product => {\r\n                total += parseInt(product.price)\r\n                i += 1.2\r\n            });\r\n            if(reduction == 0) {\r\n                return total\r\n            } else if(this.neededProducts.length > 2) {\r\n                this.reduc = i.toFixed(2)\r\n                return (total - ((total * i) / 100).toFixed(2))\r\n            }\r\n            \r\n        },\r\n        getNeededProducts() {\r\n            const risque = this.pays.risque;\r\n            axios\r\n            .get(`/api/v1/needed-products/${risque}`)\r\n            .then((response) => {\r\n            this.neededProducts = response.data;\r\n            })\r\n            .catch((error) => {\r\n            console.log(error);\r\n            });\r\n        },\r\n        currentDateTime() {\r\n            const current = new Date();\r\n            const date =\r\n                current.getFullYear() +\r\n                \"-\" +\r\n                (current.getMonth() + 1) +\r\n                \"-\" +\r\n                current.getDate();\r\n            const time = current.getHours();\r\n            const dateTime = date + \" \" + time;\r\n\r\n            return dateTime;\r\n        },\r\n        getPays(codeSlug) {\r\n        axios\r\n            .get(`/api/v1/box-country/${codeSlug}/`)\r\n            .then((response) => {\r\n            this.pays = response.data\r\n            this.getNeededProducts()\r\n            })\r\n            .catch((error) => {\r\n            console.log(error);\r\n\r\n            toast({\r\n                message: `Quelque chose ne s'est pas passé correctement, essayez à nouveau`,\r\n                type: \"is-danger\",\r\n                dismissible: true,\r\n                pauseOnHover: true,\r\n                duration: 2000,\r\n                position: \"bottom-right\",\r\n            });\r\n            });\r\n        },\r\n        getcodePays(code) {\r\n        this.selected = code\r\n        this.getPays(code);\r\n        this.codePays = code.toLowerCase();\r\n        },\r\n        async getCountries() {\r\n        this.$store.commit(\"setIsLoading\", true);\r\n\r\n        await axios\r\n            .get(`/api/v1/box-country/`)\r\n            .then((response) => {\r\n            this.countries = response.data;\r\n\r\n            document.title = \"Box Pays | Ilios Shop\";\r\n            })\r\n            .catch((error) => {\r\n            console.log(error);\r\n            });\r\n        this.$store.commit(\"setIsLoading\", false);\r\n        },\r\n    },\r\n}\r\n\r\n</script>\r\n<style>\r\n     .card-image {\r\n        display: contents;\r\n    }\r\n</style>\r\n\r\n"]}]}