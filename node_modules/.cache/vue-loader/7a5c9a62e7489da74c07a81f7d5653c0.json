{"remainingRequest":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\src\\views\\Product.vue?vue&type=style&index=0&id=35171425&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\src\\views\\Product.vue","mtime":1635326405753},{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1639407450307},{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1639407453557},{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1639407451807},{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639407449155},{"path":"C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639407452380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouaW1hZ2Ugew0KICB3aWR0aDogNTAlOw0KfQ0K"},{"version":3,"sources":["C:\\Users\\leoch\\Desktop\\Cours\\G4\\projets\\ecommerce_g4\\ecommerce\\ecommerce_front\\src\\views\\Product.vue"],"names":[],"mappings":";AAyFA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACZ","file":"C:/Users/leoch/Desktop/Cours/G4/projets/ecommerce_g4/ecommerce/ecommerce_front/src/views/Product.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"page-product m-6\">\r\n    <div class=\"columns is-multiline\">\r\n      <div class=\"column is-6\">\r\n        <figure class=\"image mb-6\">\r\n          <img :src=\"product.get_image\" />\r\n        </figure>\r\n      </div>\r\n      <div class=\"column is-6\">\r\n        <h1 class=\"title\">{{ product.name }}</h1>\r\n        <p>{{ product.description }}</p>\r\n        <br />\r\n        <p><strong>Prix : </strong> ${{ product.price }}</p>\r\n        <div class=\"field has-adddons mt-6\">\r\n          <div class=\"control\">\r\n            <input type=\"number\" size=\"7\" min=\"1\" v-model=\"quantity\" />\r\n          </div>\r\n          <div class=\"control mt-6\">\r\n            <a class=\"button is-dark\" @click=\"addToCart\">Ajouter au panier</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { toast } from \"bulma-toast\";\r\n\r\nexport default {\r\n  name: \"Product\",\r\n  data() {\r\n    return {\r\n      product: {},\r\n      quantity: 1,\r\n    };\r\n  },\r\n  // Récupère le produits une fois l'app montée\r\n  mounted() {\r\n    this.getProduct();\r\n  },\r\n  methods: {\r\n    async getProduct() {\r\n      this.$store.commit(\"setIsLoading\", true);\r\n\r\n      const category_slug = this.$route.params.category_slug;\r\n      const product_slug = this.$route.params.product_slug;\r\n\r\n      await axios\r\n        .get(`/api/v1/products/${category_slug}/${product_slug}`)\r\n        .then((response) => {\r\n          this.product = response.data;\r\n\r\n          document.title = this.product.name + \" | Ilios Shop\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      this.$store.commit(\"setIsLoading\", false);\r\n    },\r\n    //  Mutation\r\n    // Vérifie que la qt est bien >= à 1 et ajoute un item dans la liste\r\n    addToCart() {\r\n      if (isNaN(this.quantity) || this.quantity < 1) {\r\n        this.quantity = 1;\r\n      }\r\n      // Construction de l'item\r\n      const item = {\r\n        product: this.product,\r\n        quantity: this.quantity\r\n      };\r\n      // Commut == Mutation dans le store (afin d'actualiser le state)\r\n      this.$store.commit(\"addToCart\", item);\r\n\r\n      toast({\r\n        message: \"Le produit à bien été ajouté au panier\",\r\n        type: \"is-success\",\r\n        dismissible: true,\r\n        pauseOnHover: true,\r\n        duration: 2000,\r\n        position: \"bottom-right\",\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.image {\r\n  width: 50%;\r\n}\r\n</style>"]}]}